You have been given two sorted(in ascending order) singly linked lists of integers.
Write a function to merge them in such a way that the resulting singly linked list is also sorted(in ascending order) and return the new head to the list.

CODE:

 class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }
    
    public class Solution {
    
    public static LinkedListNode<Integer> mergeTwoSortedLinkedLists(LinkedListNode<Integer> head1, LinkedListNode<Integer> head2) {
       
         LinkedListNode<Integer> node = new LinkedListNode<Integer> (1);
          LinkedListNode<Integer> temp = node;

        while(head1 != null && head2 != null){
         if(head1 .data <= head2.data){
             temp.next = head1;
             head1 = head1.next;
             temp = temp.next;
         }
         else{
             temp.next = head2;
             head2 = head2.next;
             temp = temp.next;
         }
        }

         while(head1 != null){
             temp.next = head1;
             head1 = head1.next;
             temp = temp.next;
         }
         while(head2 != null){
             temp.next = head2;
             head2 = head2.next;
             temp = temp.next;
             
         }
         return node.next;
    }
}
